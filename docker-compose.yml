version: '3.8'

services:
  #db   
  postgres:
    image: postgres:15-alpine
    container_name: fraud_postgres
    environment:
      POSTGRES_DB: fraud_db
      POSTGRES_USER: fraud_user
      POSTGRES_PASSWORD: kft_123
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fraud_user -d fraud_management"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - fraud_network

  # Fraud Management API
  fraud_api:
    build: .
    container_name: fraud_api
    environment:
      DATABASE_URL: postgresql://fraud_user:kft_123@postgres:5432/fraud_db
      TIN_API_TIMEOUT: 30
      PYTHONPATH: /app
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./:/app
    command: >
      sh -c "
        echo 'Seeding database...' &&
        python run_seed.py &&
        echo ' Starting API server...' &&
        uvicorn main:app --host 0.0.0.0 --port 8000 --reload
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - fraud_network 
  
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  fraud_network:
    driver: bridge
